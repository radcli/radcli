.\" File automatically generated by doxy2man0.3
.\" Generation date: Sun Jan 29 2023
.TH rc_send_server 3 2023-01-29 "radcli" "Radius client library"
.SH "NAME"
rc_send_server \- 
.SH SYNOPSIS
.nf
.B #include <radcli/radcli.h>
.sp
\fBint rc_send_server\fP(
    \fBrc_handle  *\fP\fIrh\fP,
    \fBSEND_DATA  *\fP\fIdata\fP,
    \fBchar       *\fP\fImsg\fP,
    \fBrc_type     \fP\fItype\fP
);
.fi
.SH DESCRIPTION
.PP 
Sends a request to a RADIUS server and waits for the reply
.SH PARAMETERS
.TP
.B rh
a handle to parsed configuration 

.TP
.B data
a pointer to a SEND_DATA structure 

.TP
.B msg
must be an array of PW_MAX_MSG_SIZE or NULL; will contain the concatenation of any PW_REPLY_MESSAGE received. 

.TP
.B type
must be AUTH or ACCT 

.SH STRUCTURES
.SS ""
.PP
.sp
.sp
.RS
.nf
\fB
struct send_data {
  uint8_t      \fIcode\fP;          // RADIUS packet code. 
  uint8_t      \fIseq_nbr\fP;       // Packet sequence number. 
  char        *\fIserver\fP;        // Name/address of RADIUS server. 
  int          \fIsvc_port\fP;      // RADIUS protocol destination port. 
  char        *\fIsecret\fP;        // Shared secret of RADIUS server. 
  int          \fItimeout\fP;       // Session timeout in seconds. 
  int          \fIretries\fP;
  VALUE_PAIR  *\fIsend_pairs\fP;    // More a/v pairs to send. 
  VALUE_PAIR  *\fIreceive_pairs\fP; // Where to place received a/v pairs. 
};
\fP
.fi
.RE
.SH RETURN VALUE
.PP
OK_RC (0) on success, TIMEOUT_RC on timeout REJECT_RC on access reject, or negative on failure as return value. 
.SH SEE ALSO
.PP
.nh
.ad l
\fIradcli.h\fP(3), \fIrc_aaa\fP(3), \fIrc_aaa_ctx\fP(3), \fIrc_aaa_ctx_free\fP(3), \fIrc_aaa_ctx_get_secret\fP(3), \fIrc_aaa_ctx_get_vector\fP(3), \fIrc_aaa_ctx_server\fP(3), \fIrc_acct\fP(3), \fIrc_acct_proxy\fP(3), \fIrc_add_config\fP(3), \fIrc_apply_config\fP(3), \fIrc_auth\fP(3), \fIrc_auth_proxy\fP(3), \fIrc_avpair_add\fP(3), \fIrc_avpair_assign\fP(3), \fIrc_avpair_copy\fP(3), \fIrc_avpair_free\fP(3), \fIrc_avpair_gen\fP(3), \fIrc_avpair_get\fP(3), \fIrc_avpair_get_attr\fP(3), \fIrc_avpair_get_in6\fP(3), \fIrc_avpair_get_raw\fP(3), \fIrc_avpair_get_uint32\fP(3), \fIrc_avpair_insert\fP(3), \fIrc_avpair_log\fP(3), \fIrc_avpair_new\fP(3), \fIrc_avpair_next\fP(3), \fIrc_avpair_parse\fP(3), \fIrc_avpair_remove\fP(3), \fIrc_avpair_tostr\fP(3), \fIrc_buildreq\fP(3), \fIrc_check\fP(3), \fIrc_check_tls\fP(3), \fIrc_conf_int\fP(3), \fIrc_conf_srv\fP(3), \fIrc_conf_str\fP(3), \fIrc_config_free\fP(3), \fIrc_config_init\fP(3), \fIrc_destroy\fP(3), \fIrc_dict_addattr\fP(3), \fIrc_dict_addval\fP(3), \fIrc_dict_addvend\fP(3), \fIrc_dict_findattr\fP(3), \fIrc_dict_findval\fP(3), \fIrc_dict_findvend\fP(3), \fIrc_dict_free\fP(3), \fIrc_dict_getattr\fP(3), \fIrc_dict_getval\fP(3), \fIrc_dict_getvend\fP(3), \fIrc_find_server_addr\fP(3), \fIrc_get_socket_type\fP(3), \fIrc_get_srcaddr\fP(3), \fIrc_getport\fP(3), \fIrc_mksid\fP(3), \fIrc_new\fP(3), \fIrc_openlog\fP(3), \fIrc_own_hostname\fP(3), \fIrc_read_config\fP(3), \fIrc_read_dictionary\fP(3), \fIrc_read_dictionary_from_buffer\fP(3), \fIrc_send_server\fP(3), \fIrc_setdebug\fP(3), \fIrc_test_config\fP(3), \fIrc_tls_fd\fP(3)
.ad
.hy
